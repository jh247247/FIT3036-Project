* <2015-08-04 Tue>
** Discussion
   What kind of system grows without bound? I.e: has positive
   feedback?
   - Wildfire
   - Corruption in government
   - Population without predators
   - Greenhouse effect
** Work
   Come up with at least 3 ideas that can change the global
   environment drastically that we can implement in daisy world.
   - Meteor strike
   - Volcano
   - Fire
   - Greenhouse effect
** Independent ideas
   - Daisy predators?
     - Goes against the whole idea of planet only occupied by daisies
   - "Harvesters"
     - Where daisies are harvested from a certain area, periodically
       killing them off
   - Different maximum age for different daisies
     - I.e: black lives longer than white?
   - Different growth rates at different temperatures?
     - Attempt to knock the balance off-kilter
     - White prefers high temps and black low temps (Might actually
       cause oscillation, would be interesting...)
     - White prefers low temps and black high temps, essentially
       positive feedback.

   http://www.uwa.edu.au/__data/assets/pdf_file/0006/1637367/Wittwer_2005.pdf
* <2015-08-18 Tue>
** Draft abstract
   Points to make:
   - What:
     - What problem are we trying to solve?
     - What were the results of your research?
     - What are the implications of the research?
   - Why:
     - Why are we doing this?
   - How:
     - How are we going to do this?
     - How are we going to change it from previous research?

   Daisyworld is a computer simulation proposed by James Lovelock and
   Andrew Watson in a paper published in 1983. It proposes the
   possibility of a simple system that self regulates via the albedo
   of the two kinds of daisies that grow on an isolated planet. In
   an attempt to illustrate the effects of speciation(?), the computer
   simulation is modified by having the two types of daisies flourish
   at different temperatures. This modification induced (X) and
   showed (Y). Etc?
** Program design
   - World
     - Contains some topology of the entire planet, make it simple
       and be a grid/torus
     - Each tile contains either a type of daisy or bare earth
     - Manages the temperatures at each of the tiles using the
       incident radiation and the amount absorbed by the albedo at
       each tile
   - Tile
     - Contains a daisy or bare earth
     - Has a incident amount of light
     - Has an albedo, dependent on the object at this tile
     - Has a local temperature, local object is dependent on this
     - Does it need a number of time steps since the "object" has
       been living on it?
       - I.e: the daisy will be more likely to die dependent on the
	 difference between the ideal temp and the local temp as well
	 as the amount of time since it spawned
     - At each time step, this has to calculate the probability of
       certain events happening, e.g: the daisy dying or a new daisy
       spawning
       - Will we have multiple daisies in one tile?
   - Daisy
     - Can spawn, grow, die
     - Growth is dependent on the incident radiation and temperature
       (delta ideal temp)
     - Has an albedo (independent from the containing tile)
     - Has an ideal temperature (template programming or just an
       overloaded constructor?)
     - "Just a container" to be handled by the containing tile
     - Has an ideal spawn temperature, make this dependent on the
       type of daisy?
   - Sun
     - Has an output of radiation
     - Radiation can increase/decrease over time
     - Affects global temperature via amount of radiation
     - Controlled by user?
   - UI
     - Controlled by user
     - Should contain graphs of spawn probability vs temp for each
       type of daisy
     - Should show topology of the planet with graphics for daisies
     - Should have some kind of input for ideal daisy temp and
       incident radiation
     - Should have input for incident radiation vs time
     - Should communicate only with an eventbus(?) Callbacks
       complicate things a bit too much, makes my life easier.
   *
* <2015-08-18 Tue>
** What makes a good title?
   - Be informative
   - Be catchy
   - Can't be too long
   - Keywords
     - Often are specified in the article
     - e.g: Daisyworld, homeostatic, climate
   - Have to be unabiguouos
   - Memorable!
   - Catchphrase; explains a lot in a few words
   - Impactful words, then a sentence explaining what it is about
** What makes a bad title?
   - Uses Jargon
   - Vague
   -
** Good titles?
   - Daisyworld; the tale of two flowers



** This week
   - Start coding classes
     - Idea for UI/graphics pyQT
   - Read "Individual based modelling and ecology" by Grimm
     - Remember to mention agent-based model in paper introduction

* <2015-08-23 Sun>
** Papers
*** Self sustained temperature oscillations on daisyworld
    http://onlinelibrary.wiley.com.ezproxy.lib.monash.edu.au/doi/10.1034/j.1600-0889.1999.t01-3-00005.x/pdf

    - Seems like they try to induce the same model that I'm trying to
      do, with black and white daisies having different "optimal"
      temperatures
    - They only use the mathematical model, no actual computer
      simulation takes place...
    - Oscillations only take place when both daisies exist
    - Oscillations depend on the solar luminosity, at the extremities
      damped oscillations can take place (something to investigate...)
*** Catastrophes on daisyworld
    http://ac.els-cdn.com.ezproxy.lib.monash.edu.au/S0169534703000971/1-s2.0-S0169534703000971-main.pdf?_tid=475b389c-4985-11e5-82a3-00000aab0f27&acdnat=1440327428_a53255f04ad37eb872bca0b58949ea50
    - This is more like a description of daisyworld and how it should
      actually be written about more in ecological papers...
    - Is actually quite nice to read if somebody didn't really have an
      understanding of daisyworld, try to write like this in
      introduction?
    - Has good references to other papers and a summarisation of what
      they actually say, nice!
    - Refers to another paper where a desert grows across the world? Idea?
*** Catastrophic desert formation in daisyworld
    http://ac.els-cdn.com.ezproxy.lib.monash.edu.au/S0022519303000699/1-s2.0-S0022519303000699-main.pdf?_tid=22a7e238-4986-11e5-a18a-00000aacb35f&acdnat=1440327796_1bff9d861652a3885ef56018c69e54bf
    - Paper commented on in previous section
    - Actually has a spacial model for simulation
    - Nicely worded abstract, understandable if you already know of daisyworld
    - Desert comes about due to emulation of latitudes and the
      difference of incident solar radiation
    - Has pictures of their simulation
    - Nicely worded analysis of the critical points in the
      temperature/solar radiation curves in conclusion
* <2015-08-25 Tue>
** Code progress
   Implemented a basic implementation of daisyworld, just by
   "eyeballing" the paper. The system that I've implemented is rather
   naive and is really just an approximation of the daisyworld
   specified in the paper.
   Things to tune:
   - Probability of a daisy growing at some point
   - Daisy death vs temperature + age instead of just age
   - Different probability for growth of different types of daisies vs temperature
   - Different "optimal" points for different types of daisies
** To Read
*** Daisyworld: a review
    http://www.dpi.inpe.br/gilberto/cursos/cst-317/papers/daisyworld_review.pdf
    -
*** Self stabilization of the biosphere under global change
    :PROPERTIES:
    :ID:       aa18bb5a-b300-4293-89fa-46e2ad1a8d84
    :END:
    - a tutorial geological approach
* <2015-09-01 Tue>
  Moving on to implementing UI now, really quite easy since I chose QT as the framework.
  Not exactly the best architecture though, with each inner stage having to keep a
  reference to their parent in order to implement some stuff, like daisies having to
  know the temp of the tile they occupy. It works, so no need to change it now.

  Made the text within the tile change color depending on the current temp.
  Right now it is a rather naive method, might want to fix that
  later.

  I also plotted some sample data I generated, since the system
  exhibits homeostasis at this point. Not very well mind you, but
  still well enough to plot. Now I just need to tune up the system and
  make it more "true" to the original paper before adding my modification.
** <2015-09-14 Mon>
   Reworked the color temp to use the Hue from 0 to 255, I.e red to dark purple.
   Now it looks fancier, a better heat map...

* <2015-09-11 Fri>
  I noticed that there was way too much oscillation to classify the simulation as "homeostatic",
  I.e the temperature would deviate up to 10 degrees from the "optimal temp" of 22.5 in a system
  with only normal daisies at 1.0 luminosity.

  To fix this I made the daisies not only die depending on some factor of the difference between
  the "optimal temp" and the current temp, but I also made the daisies lifespan much shorter, from
  100 ticks to 20 ticks. Oscillation is now about Â± 2.5 degrees from the optimal temp.
** TODO Implementation
   - Have to figure out a way to make all the optional daisies die based on user input
     - Idea: When checking daisies, compare them against current available types of daisies,
       if they don't exist, kill them.
** <2015-10-04 Sun> REDONE
   This did not work as intended, so instead I have implemented it
   "properly" as outlined in Watsons original paper, I.e an inverted
   parabola with a peak at 1 at the "optimal growing
   temperature". I wasn't satisfied at the constant death rate
   however, and just made it 1-growth rate. My logic is that a
   constant death rate does not lend itself to real life, because if a
   daisy spawns somehow at a 100 degree tile, it has the same chance
   of dying as one in an ideal environment. This does not make sense
   to me, hence the change.

* <2015-09-15 Tue>
  Today I added command line arguments to my program for the later
  scripting I will do. It has the basic parameters of this systems,
  amount of timesteps, amount of change in solar luminosity per
  timestep etc. Also another thing I should probably add is an option
  to disable the GUI since that makes simulation about 30% faster,
  which is important since it takes SUCH a long time to run.

  I also made a bash script to wrap the command line options I made. It's
  pretty "dumb" and doesn't do very much in terms of figuring out how
  many runs to do so far. One thing it does do very well though is
  multiprocessing the simulations, I managed to get it to
  automagically determine the amount of processes to run based on the
  amounttemperate the computer has. This means that my final runs will
  have to be "batched" based on the amount of threads I run, but that
  can be worked around.	The best thing about this is that (on my
  computer anyway) the simulation essentially takes 1/4 of the time to
  run if I run a whole bunch. Anyway, I'm just happy I have a wrapper
  around the code so everything becomes much more simple to grab data.
* <2015-09-22 Tue>
  Introduction
  - include agent-based models, how, why, references, examples.
    - How it has been used in other research
    - Why we have decided to use one
    - Remember to add references to other research that use an agent based model
    - Add examples of how they are used

  - STRUCTURE, include a paragraph that explains how the paper is laid out
  - equations, can use equation references from other papers
  - how are we going to use the simulation?

* <2015-10-07 Wed>
  I have decided to (well more like finally got around to) implement a
  script to automatically generate my data. Instead of sitting there
  and finding out whether or not I should do more runs I can just use
  matlab and have it determine how many runs to do. Alan said
  yesterday that we should use the 95% confidence interval of the data
  to determine if we are doing enough runs. Much smarter that what I
  have currently, which is a blind 50-run simulation that I do
  overnight.

  There are a few problems though, what about the parts of the plot
  where the planet is lifeless? Won't the 95% confidence interval
  always overlap? I could just use the total amount of daisies to work
  out if the planet is lifeless, but what about the parts where there
  is some life, but not alot? I think the best way to go about this is
  to omit points that the confidence interval is already very small,
  this would correspond to sections where the simulation is very
  similar, such as homeostasis (if it is very good) or the lifeless
  sections.

  So, flow:
  1. If not done for parameter -> Generate run ELSE go to 5
  2. Generate 95% confidence interval based on all runs for that parameter
  3. Is difference between all points "very small"? YES -> done for parameter
  4. Does confidence interval overlap adjacent runs? NO -> done for parameter
  5. Go to next parameter


  So, plan of action:
  - Commandline options DONE
  - Matlab code DONE
  - Plot generation, hacky but DONE
* <2015-10-11 Sun>
  I finally realized that my heat model was incorrect, but only after
  wondering why my lifeless world plot was linear instead of a high
  power root like in the original daisyworld paper. Before I was using
  a naive "newtons law of cooling" at each tile, with the ambient
  temperature being the absolute zero of space and adding some
  constant of the solar luminosity multiplied by the amount of energy
  absorbed.

  I have re-implemented it to use stefan's blackbody emission
  temperature. At each timestep the expected temperature is calculated
  based on the albedo of the tile (each tile is kind of like a
  mini-world in this respect) and a small fraction is added to the
  current temperature to warm or cool the tile. This means that
  overall, the planet should converge to the value given by stefan's
  blackbody emission for the average world albedo!
